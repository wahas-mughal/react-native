import React, { useState } from "react";
import {
  Container,
  Header,
  Content,
  Form,
  Item,
  Input,
  Label,
  Card,
  CardItem,
  Text,
  Button,
  Icon
} from "native-base";
import { View, Alert, ActivityIndicator, TouchableOpacity } from "react-native";
import * as firebase from "firebase";
import "@firebase/firestore";
import {useDispatch} from 'react-redux';
import * as authActions from '../store/action/auth';

const SignUp = (props) => {
  const db = firebase.firestore();
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [firstName, setFirstName] = useState("");
  const [lastName, setLastName] = useState("");
  const [isLoading, setIsLoading] = useState(false);
  const dispatch = useDispatch();

  // Creates user in firebase and creates a collection of the user's information with reference to the uid generated by firebase
  const userSignUp = async (userEmail, pass) => {
    try {
      setIsLoading(true);
      const credentials = await firebase.auth().createUserWithEmailAndPassword(userEmail, pass);
      credentials.user.getIdToken().then(function (idToken) {
        dispatch(authActions.auth(idToken, credentials.user.uid));
        console.log("token at the time of login " + idToken);
        console.log("user id at the time of login " + credentials.user.uid);
        props.navigation.navigate("afterAuthHome");
      });
      return db.collection("users").doc(credentials.user.uid).set({
        firstname: firstName,
        lastname: lastName,
      });
    } catch (err) {
      Alert.alert(err.message);
    }
    setIsLoading(false);
  };

  if (isLoading) {
    return (
      <View style={{ flex: 1, justifyContent: "center", alignItems: "center" }}>
        <ActivityIndicator size={28} color="#0065ff" />
      </View>
    );
  }

  return (
    <Container style={{ backgroundColor: "#0065ff" }}>
      <Content
        contentContainerStyle={{
          justifyContent: "center",
          flex: 1,
          margin: 20,
        }}
      >
        <View style={{ alignSelf: "center", marginBottom: 40 }}>
          <Text style={{ color: "#fff", fontSize: 30 }}> Sign Up </Text>
        </View>
        <Card style={{ padding: 10 }}>
          <CardItem cardBody style={{ height: 80 }}>
            <Item floatingLabel>
              <Label>First Name</Label>
              <Input onChangeText={(fname) => setFirstName(fname)} />
            </Item>
          </CardItem>
          <CardItem cardBody style={{ height: 80 }}>
            <Item floatingLabel>
              <Label>Last Name</Label>
              <Input onChangeText={(lname) => setLastName(lname)} />
            </Item>
          </CardItem>
          <CardItem cardBody style={{ height: 80 }}>
            <Item floatingLabel>
              <Label>Email</Label>
              <Input onChangeText={(email) => setEmail(email)} />
            </Item>
          </CardItem>
          <CardItem cardBody style={{ height: 80 }}>
            <Item floatingLabel>
              <Label>Password</Label>
              <Input onChangeText={(password) => setPassword(password)} />
            </Item>
          </CardItem>
        </Card>

        <Button
          style={{
            backgroundColor: "#fff",
            alignSelf: "flex-end",
            marginTop: 10,
          }}
          onPress={() => userSignUp(email, password)}
        >
          <Text style={{ color: "#0065ff" }}> Sign Up</Text>
        </Button>
        <View style = {{width: '100%', alignItems: 'center', marginTop: 10}}>
        <TouchableOpacity onPress={() => props.navigation.navigate("home")}>
        <Icon
          name="md-home"
          style={{ color: "#fff", fontSize: 40, marginLeft: 20 }}
        />
      </TouchableOpacity>
        </View>
      </Content>
    </Container>
  );
};
export default SignUp;
